fragment basicSessionFields on Session {
  id
  createdAt
  lastUpdated
}

fragment pieceFields on Piece {
  color
  type
}

fragment squareXYFields on Square {
  file
  rank
}

fragment gameboardFields on Gameboard {
  id
  squares {
    ...squareXYFields
    name
    piece {
      ...pieceFields
    }
  }
  whiteKingLocation {
    ...squareXYFields
    name
  }
  blackKingLocation {
    ...squareXYFields
    name
  }
}

query PlayGame($gameId: ID!, $userId: ID!) {
  playGame(gameId: $gameId, userId: $userId) {
    ...basicSessionFields
    players {
      ...userWithId
    }
    gameState {
      gameStarted
      gameOver
      currentTurn
    }
    # get id to check availability and reroute if nonexistent
    gameBoard {
      id
    }
  }
}

query GetBoard($gameId: ID!, $userId: ID!) {
  playGame(gameId: $gameId, userId: $userId) {
    ...basicSessionFields
    gameboard {
      ...gameboardFields
    }
  }
}

mutation FindGame($userId: ID!) {
  findGame(userId: $userId) {
    elapsedTime
  }
}

mutation MovePiece($gameId: ID!, $from: SquareXYInput!, $to: SquareXYInput!) {
  movePiece(gameId: $gameId, from: $from, to: $to) {
    ...gameboardFields
  }
}

subscription MatchFound($userId: ID!) {
  matchFound(userId: $userId) {
    ...basicSessionFields
  }
}

subscription BoardChanged($userId: ID!) {
  boardChanged(userId: $userId) {
    ...gameboardFields
  }
}
