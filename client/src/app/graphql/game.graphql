fragment basicSessionFields on Session {
  _id
  createdAt
  lastUpdated
}

fragment pieceFields on Piece {
  color
  type
  captured
  name
}

fragment squareXYFields on Square {
  file
  rank
}

fragment squareFields on Square {
  file
  rank
}

fragment boardFields on Board {
  _id
  squares {
    ...squareXYFields
    name
    piece {
      ...pieceFields
    }
  }
  whiteKingLocation {
    ...squareXYFields
    name
  }
  blackKingLocation {
    ...squareXYFields
    name
  }
}

query PlayGame($gameId: ObjectId!) {
  playGame(gameId: $gameId) {
    ...basicSessionFields
    players {
      ...userWithId
    }
    gameState {
      gameStarted
      gameOver
      currentTurn
    }
    # get id to check availability and reroute if nonexistent
    board {
      _id
    }
  }
}

query GetBoard($gameId: ObjectId!) {
  playGame(gameId: $gameId, includeBoard: true) {
    ...basicSessionFields
    board {
      ...boardFields
    }
  }
}

# query GetMoves($id: Int) {
#   testGetMoves(id: $id) {
#     # file
#     # rank
#     regularMoves {
#       file
#       rank
#       name
#     }
#     eagerMoves {
#       file
#       rank
#       name
#     }
#   }
# }

mutation FindGame($userId: ObjectId!) {
  findGame(userId: $userId) {
    elapsedTime
  }
}

mutation MovePiece(
  $gameId: ObjectId!
  $from: SquareXYInput!
  $to: SquareXYInput!
) {
  movePiece(gameId: $gameId, from: $from, to: $to)
}

subscription MatchFound($userId: ObjectId!) {
  matchFound(userId: $userId) {
    ...basicSessionFields
  }
}

subscription BoardChanged($userId: ObjectId!) {
  boardChanged(userId: $userId) {
    ...boardFields
  }
}
